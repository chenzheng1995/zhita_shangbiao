<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhita.dao.manage.CommodityTypeMapper">
  <resultMap id="BaseResultMap" type="com.zhita.model.manage.CommodityType">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="typename" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sort" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="companyid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="deleted" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="operator" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="operationTime" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, typename, sort, companyid, deleted, operator, operationTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from commodity_type
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from commodity_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhita.model.manage.CommodityType">
    insert into commodity_type (id, typename, sort, 
      companyid, deleted, operator, 
      operationTime)
    values (#{id,jdbcType=INTEGER}, #{typename,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, 
      #{companyid,jdbcType=INTEGER}, #{deleted,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, 
      #{operationtime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhita.model.manage.CommodityType">
    insert into commodity_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="typename != null">
        typename,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="companyid != null">
        companyid,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="operationtime != null">
        operationTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="typename != null">
        #{typename,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operationtime != null">
        #{operationtime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhita.model.manage.CommodityType">
    update commodity_type
    <set>
      <if test="typename != null">
        typename = #{typename,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="companyid != null">
        companyid = #{companyid,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operationtime != null">
        operationTime = #{operationtime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhita.model.manage.CommodityType">
    update commodity_type
    set typename = #{typename,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      companyid = #{companyid,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      operationTime = #{operationtime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>